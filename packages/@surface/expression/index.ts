import Expression from "./internal/expression.js";

export type { default as IArrayExpression }          from "./internal/interfaces/array-expression";
export type { default as IArrayPattern }             from "./internal/interfaces/array-pattern";
export type { default as IArrowFunctionExpression }  from "./internal/interfaces/arrow-function-expression";
export type { default as IAssignmentExpression }     from "./internal/interfaces/assignment-expression";
export type { default as IAssignmentPattern }        from "./internal/interfaces/assignment-pattern";
export type { default as IAssignmentProperty }       from "./internal/interfaces/assignment-property";
export type { default as IBinaryExpression }         from "./internal/interfaces/binary-expression";
export type { default as ICallExpression }           from "./internal/interfaces/call-expression";
export type { default as IChainExpression }          from "./internal/interfaces/chain-expression";
export type { default as IConditionalExpression }    from "./internal/interfaces/conditional-expression";
export type { default as IElement }                  from "./internal/interfaces/element";
export type { default as IExpression }               from "./internal/interfaces/expression";
export type { default as IIdentifier }               from "./internal/interfaces/identifier";
export type { default as ILiteral }                  from "./internal/interfaces/literal";
export type { default as ILogicalExpression }        from "./internal/interfaces/logical-expression";
export type { default as IMemberExpression }         from "./internal/interfaces/member-expression";
export type { default as INewExpression }            from "./internal/interfaces/new-expression";
export type { default as INode }                     from "./internal/interfaces/node";
export type { default as IObjectExpression }         from "./internal/interfaces/object-expression";
export type { default as IObjectPattern }            from "./internal/interfaces/object-pattern";
export type { default as IParenthesizedExpression }  from "./internal/interfaces/parenthesized-expression";
export type { default as IPattern }                  from "./internal/interfaces/pattern";
export type { default as IProperty }                 from "./internal/interfaces/property";
export type { default as IRegExpLiteral }            from "./internal/interfaces/reg-exp-literal";
export type { default as IRestElement }              from "./internal/interfaces/rest-element";
export type { default as ISequenceExpression }       from "./internal/interfaces/sequence-expression";
export type { default as ISpreadElement }            from "./internal/interfaces/spread-element";
export type { default as ITaggedTemplateExpression } from "./internal/interfaces/tagged-template-expression";
export type { default as ITemplateElement }          from "./internal/interfaces/template-element";
export type { default as ITemplateLiteral }          from "./internal/interfaces/template-literal";
export type { default as IThisExpression }           from "./internal/interfaces/this-expression";
export type { default as IUnaryExpression }          from "./internal/interfaces/unary-expression";
export type { default as IUpdateExpression }         from "./internal/interfaces/update-expression";

export { default as ExpressionVisitor }         from "./internal/expression-visitor.js";
export { default as ExpressionRewriterVisitor } from "./internal/expression-rewriter-visitor.js";
export { default as NodeType }                  from "./internal/node-type.js";
export { default as SyntaxError }               from "./internal/syntax-error.js";
export { default as TypeGuard }                 from "./internal/type-guard.js";

export default Expression;