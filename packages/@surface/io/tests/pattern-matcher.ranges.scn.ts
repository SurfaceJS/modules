/* eslint-disable import/prefer-default-export */

const skip = false;

export type Scenario =
{
    pattern:    `{${number}..${number}${`..${number}` | ""}}`,
    regex:      RegExp,
    skip:       boolean,
    matches:    (string | number)[],
    mismatches: (string | number)[],
};

export const scenarios: Scenario[] =
[
    {
        skip,
        pattern:    "{-10..0}",
        regex:      /^(?:-10|-[1-9]|0)$/,
        matches:    [-10, -9, 0],
        mismatches: [-20, -19, 1, 9, 10],
    },
    {
        skip,
        pattern:    "{-10..10}",
        regex:      /^(?:-10|-[1-9]|0|10|[1-9])$/,
        matches:    [-10, -9, 0, 5, 9, 10],
        mismatches: [-20, -19, -11, 11, 19, 20],
    },
    {
        skip,
        pattern:    "{0..10}",
        regex:      /^(?:10|\d)$/,
        matches:    [0, 5, 9, 10],
        mismatches: [11, 19, 20],
    },
    {
        skip,
        pattern:    "{5..10}",
        regex:      /^(?:10|[5-9])$/,
        matches:    [5, 9, 10],
        mismatches: [0, 4, 11, 19, 20],
    },
    {
        skip,
        pattern:    "{0..15}",
        regex:      /^(?:1[0-5]|\d)$/,
        matches:    [0, 9, 10, 15],
        mismatches: [16, 19, 20],
    },
    {
        skip,
        pattern:    "{5..15}",
        regex:      /^(?:1[0-5]|[5-9])$/,
        matches:    [5, 9, 10, 15],
        mismatches: [0, 4, 16, 19, 20],
    },
    {
        skip,
        pattern:    "{10..15}",
        regex:      /^(?:1[0-5])$/,
        matches:    [10, 15],
        mismatches: [0, 9, 16, 19, 20],
    },
    {
        skip,
        pattern:    "{0..25}",
        regex:      /^(?:2[0-5]|1\d|\d)$/,
        matches:    [0, 9, 10, 19, 20, 25],
        mismatches: [26, 29, 30],
    },
    {
        skip,
        pattern:    "{10..25}",
        regex:      /^(?:2[0-5]|1\d)$/,
        matches:    [10, 19, 20, 25],
        mismatches: [0, 9, 26, 29, 30],
    },
    {
        skip,
        pattern:    "{0..50}",
        regex:      /^(?:50|[1-4]\d|\d)$/,
        matches:    [0, 9, 10, 19, 40, 49, 50],
        mismatches: [51, 60],
    },
    {
        skip,
        pattern:    "{10..50}",
        regex:      /^(?:50|[1-4]\d)$/,
        matches:    [10, 19, 40, 49, 50],
        mismatches: [0, 9, 51, 60],
    },
    {
        skip,
        pattern:    "{25..50}",
        regex:      /^(?:50|2[5-9]|[34]\d)$/,
        matches:    [25, 29, 30, 39, 40, 49, 50],
        mismatches: [0, 9, 10, 19, 20, 24, 51, 60],
    },
    {
        skip,
        pattern:    "{45..50}",
        regex:      /^(?:50|4[5-9])$/,
        matches:    [45, 50],
        mismatches: [0, 10, 40, 51],
    },
    {
        skip,
        pattern:    "{49..50}",
        regex:      /^(?:50|49)$/,
        matches:    [49, 50],
        mismatches: [48, 51],
    },
    {
        skip,
        pattern:    "{0..100}",
        regex:      /^(?:100|[1-9]\d|\d)$/,
        matches:    [0, 9, 10, 19, 90, 99, 100],
        mismatches: [101, 200],
    },
    {
        skip,
        pattern:    "{25..100}",
        regex:      /^(?:100|2[5-9]|[3-9]\d)$/,
        matches:    [25, 29, 30, 39, 90, 99, 100],
        mismatches: [0, 9, 10, 19, 20, 101, 200],
    },
    {
        skip,
        pattern:    "{50..100}",
        regex:      /^(?:100|[5-9]\d)$/,
        matches:    [50, 59, 60, 69, 90, 99, 100],
        mismatches: [0, 9, 10, 49, 101, 200],
    },
    {
        skip,
        pattern:    "{95..100}",
        regex:      /^(?:100|9[5-9])$/,
        matches:    [95, 99, 100],
        mismatches: [0, 9, 10, 90, 94, 101, 200],
    },
    {
        skip,
        pattern:    "{99..100}",
        regex:      /^(?:100|99)$/,
        matches:    [99, 100],
        mismatches: [98, 101],
    },
    {
        skip,
        pattern:    "{0..150}",
        regex:      /^(?:150|1[0-4]\d|[1-9]\d|\d)$/,
        matches:    [0, 9, 10, 99, 100, 149, 150],
        mismatches: [151, 200],
    },
    {
        skip,
        pattern:    "{5..150}",
        regex:      /^(?:150|1[0-4]\d|[1-9]\d|[5-9])$/,
        matches:    [5, 9, 10, 99, 100, 109, 149, 150],
        mismatches: [0, 4, 151, 200],
    },
    {
        skip,
        pattern:    "{25..150}",
        regex:      /^(?:150|1[0-4]\d|2[5-9]|[3-9]\d)$/,
        matches:    [25, 29, 30, 99, 100, 109, 149, 150],
        mismatches: [0, 9, 10, 19, 20, 24, 151, 160, 200],
    },
    {
        skip,
        pattern:    "{50..150}",
        regex:      /^(?:150|1[0-4]\d|[5-9]\d)$/,
        matches:    [50, 59, 60, 69, 90, 99, 100, 109, 140, 149, 150],
        mismatches: [0, 9, 10, 19, 40, 49, 151, 160, 200],
    },
    {
        skip,
        pattern:    "{99..150}",
        regex:      /^(?:150|1[0-4]\d|99)$/,
        matches:    [99, 100, 109, 140, 149, 150],
        mismatches: [0, 9, 10, 19, 90, 98, 151, 160, 200],
    },
    {
        skip,
        pattern:    "{100..150}",
        regex:      /^(?:150|1[0-4]\d)$/,
        matches:    [100, 109, 140, 149, 150],
        mismatches: [0, 9, 10, 19, 90, 99, 151, 160, 200],
    },
    {
        skip,
        pattern:    "{125..150}",
        regex:      /^(?:150|12[5-9]|1[34]\d)$/,
        matches:    [125, 129, 130, 139, 140, 149, 150],
        mismatches: [0, 9, 10, 19, 90, 99, 100, 109, 110, 119, 120, 124, 151, 160, 200],
    },
    {
        skip,
        pattern:    "{145..150}",
        regex:      /^(?:150|14[5-9])$/,
        matches:    [145, 149, 150],
        mismatches: [0, 9, 10, 19, 90, 99, 100, 109, 110, 119, 140, 144, 151, 160, 200],
    },
    {
        skip,
        pattern:    "{0..500}",
        regex:      /^(?:500|[1-4]\d{2}|[1-9]\d|\d)$/,
        matches:    [0, 9, 10, 19, 90, 99, 100, 109, 119, 199, 200, 209, 299, 400, 409, 499, 500],
        mismatches: [501, 509, 599, 600],
    },
    {
        skip,
        pattern:    "{5..500}",
        regex:      /^(?:500|[1-4]\d{2}|[1-9]\d|[5-9])$/,
        matches:    [5, 9, 10, 19, 90, 99, 100, 109, 119, 199, 200, 209, 299, 400, 409, 499, 500],
        mismatches: [0, 4, 501, 509, 599, 600],
    },
    {
        skip,
        pattern:    "{10..500}",
        regex:      /^(?:500|[1-4]\d{2}|[1-9]\d)$/,
        matches:    [10, 19, 90, 99, 100, 109, 119, 199, 200, 209, 299, 400, 409, 499, 500],
        mismatches: [0, 9, 501, 509, 599, 600],
    },
    {
        skip,
        pattern:    "{25..500}",
        regex:      /^(?:500|[1-4]\d{2}|2[5-9]|[3-9]\d)$/,
        matches:    [25, 29, 30, 39, 90, 99, 100, 109, 119, 199, 200, 209, 299, 400, 409, 499, 500],
        mismatches: [0, 9, 10, 19, 20, 24, 501, 509, 599, 600],
    },
    {
        skip,
        pattern:    "{50..500}",
        regex:      /^(?:500|[1-4]\d{2}|[5-9]\d)$/,
        matches:    [50, 59, 60, 69, 90, 99, 100, 109, 119, 199, 200, 209, 299, 400, 409, 499, 500],
        mismatches: [0, 9, 10, 19, 49, 501, 509, 599, 600],
    },
    {
        skip,
        pattern:    "{95..500}",
        regex:      /^(?:500|[1-4]\d{2}|9[5-9])$/,
        matches:    [95, 99, 100, 109, 119, 199, 200, 209, 299, 400, 409, 499, 500],
        mismatches: [0, 9, 10, 19, 90, 94, 501, 509, 599, 600],
    },
    {
        skip,
        pattern:    "{100..500}",
        regex:      /^(?:500|[1-4]\d{2})$/,
        matches:    [100, 109, 119, 199, 200, 209, 299, 499, 500],
        mismatches: [0, 9, 10, 19, 90, 99, 501, 509, 599, 600],
    },
    {
        skip,
        pattern:    "{105..500}",
        regex:      /^(?:500|10[5-9]|1[1-9]\d|[2-4]\d{2})$/,
        matches:    [105, 109, 119, 199, 200, 209, 299, 499, 500],
        mismatches: [0, 9, 10, 19, 90, 99, 100, 501, 509, 599, 600],
    },
    {
        skip,
        pattern:    "{110..500}",
        regex:      /^(?:500|1[1-9]\d|[2-4]\d{2})$/,
        matches:    [110, 199, 200, 209, 299, 499, 500],
        mismatches: [0, 9, 10, 19, 90, 99, 100, 109, 501, 509, 599, 600],
    },
    {
        skip,
        pattern:    "{125..500}",
        regex:      /^(?:500|12[5-9]|1[3-9]\d|[2-4]\d{2})$/,
        matches:    [125, 129, 130, 139, 190, 199, 200, 209, 299, 499, 500],
        mismatches: [0, 9, 10, 19, 90, 99, 100, 109, 501, 509, 599, 600],
    },
    {
        skip,
        pattern:    "{150..500}",
        regex:      /^(?:500|1[5-9]\d|[2-4]\d{2})$/,
        matches:    [150, 159, 160, 169, 190, 199, 200, 209, 299, 400, 409, 499, 500],
        mismatches: [0, 9, 10, 19, 90, 99, 100, 109, 149, 501, 509, 599, 600],
    },
    {
        skip,
        pattern:    "{190..500}",
        regex:      /^(?:500|19\d|[2-4]\d{2})$/,
        matches:    [190, 199, 200, 209, 299, 400, 409, 499, 500],
        mismatches: [0, 9, 10, 19, 90, 99, 100, 109, 189, 501, 509, 599, 600],
    },
    {
        skip,
        pattern:    "{195..500}",
        regex:      /^(?:500|19[5-9]|[2-4]\d{2})$/,
        matches:    [195, 199, 200, 209, 299, 400, 409, 499, 500],
        mismatches: [0, 9, 10, 19, 90, 99, 100, 109, 194, 501, 509, 599, 600],
    },
    {
        skip,
        pattern:    "{892..1000}",
        regex:      /^(?:1000|89[2-9]|9\d{2})$/,
        matches:    [892, 899, 999, 1000],
        mismatches: [100, 800, 890, 1001, 2000],
    },
    {
        skip,
        pattern:    "{0..1050}",
        regex:      /^(?:1050|10[0-4]\d|[1-9]\d{1,2}|\d)$/,
        matches:    [0, 9, 10, 99, 100, 999, 1000, 1040, 1049, 1050],
        mismatches: [1051, 1059, 1060, 2000],
    },
    {
        skip,
        pattern:    "{1050..5000}",
        regex:      /^(?:5000|10[5-9]\d|1[1-9]\d{2}|[2-4]\d{3})$/,
        matches:    [1050, 1059, 1099, 1999, 2000, 4999, 5000],
        mismatches: [1040, 1000, 1049, 5001, 5009, 5099, 5999, 6000],
    },
    {
        skip,
        pattern:    "{10..10000}",
        regex:      /^(?:10000|[1-9]\d{2,3}|[1-9]\d)$/,
        matches:    [10, 99, 100, 999, 1000, 9999, 10000],
        mismatches: [0, 9, 10001, 19999, 20000],
    },
    {
        skip,
        pattern:    "{9950..10000}",
        regex:      /^(?:10000|99[5-9]\d)$/,
        matches:    [9950, 9959, 9999, 10000],
        mismatches: [1000, 1009, 1099, 1999, 8999, 9000, 9009, 9099, 9949],
    },
    {
        skip,
        pattern:    "{12250..12500}",
        regex:      /^(?:12500|122[5-9]\d|12[34]\d{2})$/,
        matches:    [12250, 12259, 12300, 12499, 12500],
        mismatches: [10000, 12240, 12249, 12501, 12509, 12509, 20000],
    },
    {
        skip,
        pattern:    "{0..13579}",
        regex:      /^(?:1357\d|135[0-6]\d|13[0-4]\d{2}|1[0-2]\d{3}|[1-9]\d{1,3}|\d)$/,
        matches:    [0, 9, 10, 99, 100, 999, 1000, 9999, 10000, 12999, 13000, 13499, 13500, 13569, 13570, 13579],
        mismatches: [13580, 13599, 13600, 13999, 14000],
    },
    {
        skip,
        pattern:    "{0..97531}",
        regex:      /^(?:9753[01]|975[0-2]\d|97[0-4]\d{2}|9[0-6]\d{3}|[1-8]\d{4}|[1-9]\d{1,3}|\d)$/,
        matches:    [0, 9, 10, 99, 100, 999, 1000, 9999, 10000, 89999, 90000, 96999, 97000, 97499, 97500, 97529, 97530, 97531],
        mismatches: [97532, 97539, 97599, 97999, 99999, 100000],
    },
    {
        skip,
        pattern:    "{13579..97531}",
        regex:      /^(?:9753[01]|975[0-2]\d|97[0-4]\d{2}|9[0-6]\d{3}|13579|135[89]\d|13[6-9]\d{2}|1[4-9]\d{3}|[2-8]\d{4})$/,
        matches:    [13579, 13599, 13999, 19999, 89999, 90000, 96999, 97000, 97499, 97500, 97529, 97530, 97531],
        mismatches: [0, 99, 100, 999, 1000, 9999, 12999, 13000, 13500, 13570, 13578, 97532, 97539, 97599, 97999, 99999, 100000],
    },
    {
        skip,
        pattern:    "{15290..15500}",
        regex:      /^(?:15500|1529\d|15[34]\d{2})$/,
        matches:    [15290, 15299, 15300, 15309, 15399, 15499],
        mismatches: [10000, 10009, 10099, 10999, 14999, 15000, 15009, 15099, 15200, 15209, 15289, 15501, 15509, 15599, 15999, 19999, 20000],
    },
    {
        skip,
        pattern:    "{01..05}",
        regex:      /^(?:0[1-5])$/,
        matches:    ["01", "05"],
        mismatches: [1, 5, "06", "10"],
    },
    {
        skip,
        pattern:    "{0000..0100}",
        regex:      /^(?:0100|00[1-9]\d|0{3}\d)$/,
        matches:    ["0000", "0009", "0010", "0099", "0100"],
        mismatches: [0, 9, 10, 99, 100, "0101", "0199", "0200"],
    },
    {
        skip,
        pattern:    "{00000010..00010000}",
        regex:      /^(?:0{3}10000|0{4}[1-9]\d{3}|0{5}[1-9]\d{2}|0{6}[1-9]\d)$/,
        matches:    ["00000010", "00000099", "00000100", "00000999", "00001000", "00009999", "00010000"],
        mismatches: [10, 99, 100, 999, 1000, 9999, 10000, "00000009", "00000001", "00010001", "00019999", "00020000"],
    },
    {
        skip,
        pattern:    "{0000..10000}",
        regex:      /^(?:10000|[1-9]\d{3}|0[1-9]\d{2}|00[1-9]\d|0{3}\d)$/,
        matches:    ["0000", "0000", "0010", "0099", "0100", "0999", 1000, 9999, 10000],
        mismatches: [0, 9, 10, 99, 100, 999, 10001, 19999, 20000],
    },
    {
        skip,
        pattern:    "{0010..10000}",
        regex:      /^(?:10000|[1-9]\d{3}|0[1-9]\d{2}|00[1-9]\d)$/,
        matches:    ["0010", "0099", "0100", "0999", 1000, 9999, 10000],
        mismatches: [0, 9, 10, 99, 100, 999, 10001, 19999, 20000],
    },
    {
        skip,
        pattern:    "{-10..10..5}",
        regex:      /^(?:-(?:10|5)|0|5|10)$/,
        matches:    [-10, -5, 0, 5, 10],
        mismatches: [-7, -3, 3, 7],
    },
    {
        skip,
        pattern:    "{0..9..2}",
        regex:      /^(?:[02468])$/,
        matches:    [0, 2, 4, 6, 8],
        mismatches: [1, 5, 7, 10],
    },
    {
        skip,
        pattern:    "{0..009..2}",
        regex:      /^(?:00[02468])$/,
        matches:    ["000", "002", "004", "006", "008"],
        mismatches: [1, 5, 7, 10],
    },
    {
        skip,
        pattern:    "{-20..20..2}",
        regex:      /^(?:-(?:20|18|16|14|12|10|8|6|4|2)|0|2|4|6|8|10|12|14|16|18|20)$/,
        matches:    [-20, -18, -16, -14, -12, -10, -8, -6, -4, -2, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20],
        mismatches: [3, 5, 7, 9, 11, 13, 15, 17, 19, 21],
    },
    {
        skip,
        pattern:    "{0..20..2}",
        regex:      /^(?:0|2|4|6|8|10|12|14|16|18|20)$/,
        matches:    [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20],
        mismatches: [3, 5, 7, 9, 11, 13, 15, 17, 19, 21],
    },
    {
        skip,
        pattern:    "{0..20..2}",
        regex:      /^(?:0|2|4|6|8|10|12|14|16|18|20)$/,
        matches:    [0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20],
        mismatches: [3, 5, 7, 9, 11, 13, 15, 17, 19, 21],
    },
    {
        skip,
        pattern:    "{0..20..5}",
        regex:      /^(?:0|5|10|15|20)$/,
        matches:    [0, 5, 10, 15, 20],
        mismatches: [3, 7, 13, 17],
    },
    {
        skip,
        pattern:    "{000..20..5}",
        regex:      /^(?:0{3}|005|010|015|020)$/,
        matches:    ["000", "005", "010", "015", "020"],
        mismatches: ["3", "003", "7", "007", "13", "013", "17", "017"],
    },
    {
        skip,
        pattern:    "{00000..20..5}",
        regex:      /^(?:0{5}|0{4}5|0{3}10|0{3}15|0{3}20)$/,
        matches:    ["00000", "00005", "00010", "00015", "00020"],
        mismatches: [0, 5, 10, 15, 20, "00021"],
    },
];
