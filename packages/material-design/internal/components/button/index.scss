@import "../../styles/mixins.scss";

$height:
(
    x-small: 20px,
    small:   28px,
    medium:  32px,
    large:   44px,
    x-large: 52px,
);

$min-width:
(
    x-small: 36px,
    small:   50px,
    medium:  64px,
    large:   78px,
    x-large: 92px,
);

$padding:
(
    x-small: 0 8.8888888889px,
    small:   0 12.4444444444px,
    medium:  0 16px,
    large:   0 19.5555555556px,
    x-large: 0 23.1111111111px,
);

$font-size:
(
    x-small: 10px,
    small:   12px,
    medium:  14px,
    large:   14px,
    x-large: 16px,
);

$icon--height:
(
    x-small: 32px,
    small:   40px,
    medium:  48px,
    large:   64px,
    x-large: 72px,
);

$icon--font-size:
(
    x-small: 18px,
    small:   24px,
    medium:  24px,
    large:   28px,
    x-large: 32px,
);

:host
{
    @include host-defaults;

    align-items:     center;
    cursor:          pointer;
    font-weight:     500;
    justify-content: center;
    text-transform:  uppercase;
    user-select:     none;

    @at-root #{host("[size=x-small]")}
    {
        font-size: map-get($font-size, "x-small");
        height:    map-get($height,    "x-small");

        #root
        {
            padding: map-get($padding, "x-small");
        }
    }

    @at-root #{host("[size=small]")}
    {
        font-size: map-get($font-size, "small");
        height:    map-get($height,    "small");

        #root
        {
            padding: map-get($padding, "small");
        }
    }

    @at-root
    &,
    #{host("[size=medium]")}
    {
        font-size: map-get($font-size, "medium");
        height:    map-get($height,    "medium");

        #root
        {
            padding: map-get($padding, "medium");
        }
    }

    @at-root #{host("[size=large]")}
    {
        font-size: map-get($font-size, "large");
        height:    map-get($height,    "large");

        #root
        {
            padding: map-get($padding, "large");
        }
    }

    @at-root #{host("[size=x-large]")}
    {
        font-size: map-get($font-size, "x-large");
        height:    map-get($height,    "x-large");

        #root
        {
            padding: map-get($padding, "x-large");
        }
    }

    @at-root
    #{host-bool("icon")},
    #{host-bool("fab")}
    {
        min-height: 0;
        min-width:  0;

        @at-root #{host("[size=x-small]")}
        {
            font-size: map-get($icon--font-size, "x-small");
            height:    map-get($icon--height,    "x-small");
            width:     map-get($icon--height,    "x-small");
        }

        @at-root #{host("[size=small]")}
        {
            font-size: map-get($icon--font-size, "small");
            height:    map-get($icon--height,    "small");
            width:     map-get($icon--height,    "small");
        }

        @at-root
        &,
        #{host("[size=medium]")}
        {
            font-size: map-get($icon--font-size, "medium");
            height:    map-get($icon--height,    "medium");
            width:     map-get($icon--height,    "medium");
        }

        @at-root #{host("[size=large]")}
        {
            font-size: map-get($icon--font-size, "large");
            height:    map-get($icon--height,    "large");
            width:     map-get($icon--height,    "large");
        }

        @at-root #{host("[size=x-large]")}
        {
            font-size: map-get($icon--font-size, "x-large");
            height:    map-get($icon--height,    "x-large");
            width:     map-get($icon--height,    "x-large");
        }
    }

    @at-root
    #{host-bool("block")}
    {
        min-width: 100%;
    }

    @at-root
    #{host(":hover") "#root"}
    {
        @include hover-before;
    }

    #root
    {
        @include root-defaults;

        align-items:     center;
        border-radius:   4px;
        height:          inherit;
        justify-content: center;
        min-width:       64px;
        padding:         0 16px;
        position:        relative;
        width:           inherit;

        &:not(.icon):not(.outlined):not(.text)
        {
            @include set-property("color", "white", "black");
            @include set-color("background-color", "secondary", "this-color");
        }

        &.outlined
        {
            border-style: solid;
            border-width: 1px;
        }

        &.rounded
        {
            border-radius: 20px;
        }

        &.fab,
        &.icon
        {
            border-radius: 50%;
            font-size:     inherit;
            min-height:    inherit;
            min-width:     inherit;
        }

        &.icon,
        &.outlined,
        &.text
        {
            @include set-color("color",        "secondary", "this-color");
            @include set-color("border-color", "secondary", "this-color");

            background-color: transparent;
        }

        &.tile
        {
            border-radius: 0;
        }

        &.block
        {
            max-width: inherit;
            min-width: 100%;
        }

        @include hoverable-before;
    }
}